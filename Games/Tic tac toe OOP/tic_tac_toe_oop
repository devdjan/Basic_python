import random
# Create the winning cases 123, 1 5 9 etc.


class Board():
    def __init__(self):
        self.cells = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']

    def display(self):
        print(' %s | %s | %s ' % (self.cells[1], self.cells[2], self.cells[3]))
        print('-----------')
        print(' %s | %s | %s ' % (self.cells[4], self.cells[5], self.cells[6]))
        print('-----------')
        print(' %s | %s | %s ' % (self.cells[7], self.cells[8], self.cells[9]))

    def update_cell(self, cell_number, player):
        if self.cells[cell_number] == ' ':
            self.cells[cell_number] = player

    def is_winner(self, player):
        if self.cells[1] == player and self.cells[2] == player and self.cells[3] == player:
            return True

    # Reset the board
    def reset_board(self):
        self.cells = [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ']


board = Board()

def print_header():
    print('Welcome to the game!\n')

def clear_game():
    print('\n' * 1)

# Refresh the screen
def refresh_screen():
    clear_game()
    # print the header
    print_header()
    # display the board
    board.display()

# Creating the main loop of the game
while True:
    refresh_screen()

    # creating X player
    x_choise = int(input('\nX player) Choose the number from 1 - 9: '))
    # Update the information - Created a fucntion update_cell
    board.update_cell(x_choise, 'X')

    # Refresh the screen
    refresh_screen()

    # Check for winner (combinations)
    if board.is_winner('X'):
        print('\nX winS!')
        play_again = str(input('Do you want to play again ? (Y,N)')).upper()
        if play_again == 'Y':
            board.reset_board()
            continue
        else:
            break

    # creating O player
    o_choise = int(input('\nO player) Choose the number from 1 - 9: '))
    # Update the information - Created a fucntion update_cell
    board.update_cell(o_choise, 'O')



