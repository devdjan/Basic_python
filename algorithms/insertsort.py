# Метод вставок
# Сначала отпределим функцию insertion_sort()
# на вход она примет у нас список insertion_sort(list)
# Далее будем использовать цикл форб переберем элем. в пределе с 0 до длины списка - len(список)
# или по другому указатель значений.
# Начинаем с самого левого значения списка. НО это не целесообразно, так как не с чем сравнивать.
# Начнем со второго, т.е. [1] ([0] самый левый)
# Найдем значение правого элемента, т.е. равно индексу списка.
# Нужно сравнить элементы со значениями списка слева. Введем переменную и
# И будем сравнивать значение и влево, пока и не окажется в самом начале списка
# и = индекс - 1
# Пока и >= 0 Если значение меньше чем элемент находящийся при индексе списка (список[])
# Передвинем элемент вправо список[и + 1] = список(и)
# Переносим значение влево Грубо говоря обмен список(и) = value
# Теперь сравним элемент который на 1 меньше этого (декремент) и = и - 1
#
# Что будет если значение элемента не будет меньше элемента с которым мы сравниваем
# По идее заканчиваем.
#

def insertion_sort(list):
    # Начинаем со второго, т.к. нужно с чем-то сравнивать
    for index in range(1, len(list)):
        value = list[index]
        i = index - 1
        while i >= 0:
            if value < list[i]:
                list[i + 1] = list[i]
                list[i] = value
                i = i -1
            else:
                break

first_list = [1,5,8,3,2,2,4,6,7]
insertion_sort(first_list)
print(first_list)



